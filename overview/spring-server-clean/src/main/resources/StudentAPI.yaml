swagger: '2.0'
info:
  version: 0.0.1
  title: 演示API
  description: 演示API，假设对一些学生的CRUD
  contact:
    name: 孔祥娟
    url: https://github.com/sunny-kong
basePath: /
host: 127.0.0.1:8888
schemes:
  - http
produces:
  - application/json
consumes:
  - 'application/x-www-form-urlencoded'
tags:
  - name: student
    description: 学生相关接口

parameters:
  id:
    name: id
    in: path
    required: true
    type: integer
    format: int32
    description: 学生ID，主键
  name:
    name: name
    in: formData
    type: string
    maxLength: 20
    required: true
    description: 学生姓名,最长不能超过20位
  age:
    name: age
    in: formData
    required: true
    type: integer
    format: int32
    minimum: 0
    maximum: 99
    description: 学生年龄，0-99岁之间
  gender:
    name: gender
    in: formData
    required: true
    type: string
    enum:
      - male
      - female
    description: 性别

paths:
  /student:
    get:
      summary: 获取学生列表
      tags:
        - student
      operationId: listStudents
      parameters:
        - name: limit
          in: query
          format: int32
          type: integer
          minimum: 1
          maxLength: 100
          required: false
          description: 列表显示条数限制，0-100
      responses:
        200:
          description: 返回学生列表
          schema:
            type: array
            items:
              $ref: '#/definitions/Student'

    post:
      summary: 新增学生
      operationId: saveStudent
      tags:
        - student
      parameters:
        - $ref: '#/parameters/name'
        - $ref: '#/parameters/age'
        - $ref: '#/parameters/gender'
      responses:
        200:
          description: 插入成功
          schema:
            type: integer
            format: int32
            description: 学生的ID

  /student/{id}:
    get:
      summary: 学生详情
      description: 根据学生ID查询学生
      operationId: findStudent
      tags:
        - student
      parameters:
        - $ref: '#/parameters/id'
      responses:
        200:
          description: 查询出的学生
          schema:
            $ref: '#/definitions/Student'
        400:
          description: 参数错误,错误的原因
          schema:
            type: string
            example:
              ID不存在

    put:
      summary: 更新学生
      operationId: updateStudent
      tags:
        - student
      parameters:
        - $ref: '#/parameters/id'
        - $ref: '#/parameters/name'
        - $ref: '#/parameters/age'
        - $ref: '#/parameters/gender'
      responses:
        200:
          description: 更新成功
        400:
          description: 参数错误,错误的原因
          schema:
            type: string
            example:
              ID不存在
    delete:
      summary: 学生删除
      operationId: deleteStudent
      tags:
        - student
      parameters:
        - $ref: '#/parameters/id'
      responses:
        200:
          description: 删除成功
        400:
          description: 参数错误,错误的原因
          schema:
            type: string
            example:
              ID不存在

definitions:
  Student:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: 学生ID，主键
        example:
          10
      name:
        type: string
        maxLength: 20
        description: 学生姓名,最长不能超过20位
        example:
          张三
      age:
        type: integer
        format: int32
        minimum: 0
        maximum: 99
        description: 学生年龄，0-99岁之间
        example:
          20
      gender:
        type: string
        enum:
          - male
          - female
        example:
          male
        description: 性别

