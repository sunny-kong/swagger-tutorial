/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.7).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Student;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-07-14T14:59:12.053Z")

@Api(value = "student", description = "the student API")
public interface StudentApi {

    @ApiOperation(value = "学生删除", nickname = "deleteStudent", notes = "", tags={ "student", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "删除成功"),
        @ApiResponse(code = 400, message = "参数错误,错误的原因", response = String.class) })
    @RequestMapping(value = "/student/{id}",
        produces = { "application/json" }, 
        consumes = { "application/x-www-form-urlencoded" },
        method = RequestMethod.DELETE)
    ResponseEntity<Void> deleteStudent(@ApiParam(value = "学生ID，主键",required=true) @PathVariable("id") Integer id);


    @ApiOperation(value = "学生详情", nickname = "findStudent", notes = "根据学生ID查询学生", response = Student.class, tags={ "student", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "查询出的学生", response = Student.class),
        @ApiResponse(code = 400, message = "参数错误,错误的原因", response = String.class) })
    @RequestMapping(value = "/student/{id}",
        produces = { "application/json" }, 
        consumes = { "application/x-www-form-urlencoded" },
        method = RequestMethod.GET)
    ResponseEntity<Student> findStudent(@ApiParam(value = "学生ID，主键",required=true) @PathVariable("id") Integer id);


    @ApiOperation(value = "获取学生列表", nickname = "listStudents", notes = "", response = Student.class, responseContainer = "List", tags={ "student", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "返回学生列表", response = Student.class, responseContainer = "List") })
    @RequestMapping(value = "/student",
        produces = { "application/json" }, 
        consumes = { "application/x-www-form-urlencoded" },
        method = RequestMethod.GET)
    ResponseEntity<List<Student>> listStudents(@Size(max=100) @Min(1)@ApiParam(value = "列表显示条数限制，0-100") @Valid @RequestParam(value = "limit", required = false) Integer limit);


    @ApiOperation(value = "新增学生", nickname = "saveStudent", notes = "", response = Integer.class, tags={ "student", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "插入成功", response = Integer.class) })
    @RequestMapping(value = "/student",
        produces = { "application/json" }, 
        consumes = { "application/x-www-form-urlencoded" },
        method = RequestMethod.POST)
    ResponseEntity<Integer> saveStudent(@ApiParam(value = "学生姓名,最长不能超过20位", required=true) @RequestParam(value="name", required=true)  String name,@ApiParam(value = "学生年龄，0-99岁之间", required=true) @RequestParam(value="age", required=true)  Integer age,@ApiParam(value = "性别", required=true, allowableValues="male, female") @RequestParam(value="gender", required=true)  String gender);


    @ApiOperation(value = "更新学生", nickname = "updateStudent", notes = "", tags={ "student", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "更新成功"),
        @ApiResponse(code = 400, message = "参数错误,错误的原因", response = String.class) })
    @RequestMapping(value = "/student/{id}",
        produces = { "application/json" }, 
        consumes = { "application/x-www-form-urlencoded" },
        method = RequestMethod.PUT)
    ResponseEntity<Void> updateStudent(@ApiParam(value = "学生ID，主键",required=true) @PathVariable("id") Integer id,@ApiParam(value = "学生姓名,最长不能超过20位", required=true) @RequestParam(value="name", required=true)  String name,@ApiParam(value = "学生年龄，0-99岁之间", required=true) @RequestParam(value="age", required=true)  Integer age,@ApiParam(value = "性别", required=true, allowableValues="male, female") @RequestParam(value="gender", required=true)  String gender);

}
